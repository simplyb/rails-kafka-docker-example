version: '2.3'
services:
  zookeeper:
    hostname: zookeeper
    image: wurstmeister/zookeeper:3.4.6
    expose:
    - "2181"
    ports:
    - "2181:2181"
  
  kafka:
    image: wurstmeister/kafka
    env_file:
    - kafka-variables.env
    depends_on:
    - zookeeper
    ports:
    - '9092:9092'
    - '8082:8082'
    - '8083:8083'
    healthcheck:
      test: netstat tuanp | grep 9092 || exit 1
      interval: 20s
      timeout: 10s
      retries: 5
  db:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: general-db
  auth_web:
    build: ./authentication_app
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - ./authentication_app:/authentication_app
      # - ./shared/config/database.yml:/authentication_app/config/database.yml
    ports:
      - "3000:3000"
    depends_on:
      - db
  namer:
    build: ./name_randomizer
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3001 -b '0.0.0.0'"
    volumes:
      - ./name_randomizer:/name_randomizer
      # - ./shared/config/database.yml:/name_randomizer/config/database.yml
    ports:
      - "3001:3001"
    depends_on:
      - db

# docker-compose exec kafka bash
  # kafka-console-producer.sh --broker-list localhost:9092 --topic topic1
  # docker-compose exec kafka kafka-console-producer.sh --broker-list localhost:9092 --topic topic1
  
  trade_app:
    build:
      context: trade_app
    environment:
      kafkaURL: kafka:9092
      topic: topic1
      GroupID: logger-group
    depends_on:
      kafka:
        condition: service_healthy
